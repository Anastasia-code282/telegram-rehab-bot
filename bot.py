import telebot
from telebot import types
from flask import Flask, request
from datetime import datetime, timedelta
import threading
import schedule
import time
import os
from dotenv import load_dotenv

load_dotenv()
TOKEN = os.getenv("TELEGRAM_TOKEN")
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

surgery_date = datetime(2025, 7, 8)
user_ids = set()

# === –ú–µ–Ω—é –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏ ===
def main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row("/status", "/–ø–∏—Ç–∞–Ω–Ω—è")
    markup.row("‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç –∑ —Ä–µ–∞–±—ñ–ª—ñ—Ç–æ–ª–æ–≥–æ–º")
    return markup

# === –í–ø—Ä–∞–≤–∏ —Ç–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó ===
def get_rehab_info(day_number):
    if day_number <= 14:
        return [
            "*–§–∞–∑–∞ 1: –ì–æ—Å—Ç—Ä–∞ (1‚Äì14 –¥–µ–Ω—å –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó)*\n",
            "üß† *–¶—ñ–ª—å:* –∑–º–µ–Ω—à–∏—Ç–∏ –±—ñ–ª—å, –Ω–∞–±—Ä—è–∫, –∞–∫—Ç–∏–≤—É–≤–∞—Ç–∏ –º'—è–∑–∏",
            "‚ùó –ë–µ–∑ –æ–ø–æ—Ä–∏ –Ω–∞ –ø—Ä–æ–æ–ø–µ—Ä–æ–≤–∞–Ω—É –Ω–æ–≥—É",
            "\nü¶µ *–í–ø—Ä–∞–≤–∏:*",
            "- –Ü–∑–æ–º–µ—Ç—Ä—ñ—è –∫–≤–∞–¥—Ä—ñ—Ü–µ–ø—Å–∞",
            "- –ü—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è –ø—Ä—è–º–æ—ó –Ω–æ–≥–∏",
            "- –ó–≥–∏–Ω–∞–Ω–Ω—è –∫–æ–ª—ñ–Ω–∞ –¥–æ 30‚Äì40¬∞",
            "- –ü–∞–ª—å—Ü–µ–≤–∞ –ø–æ–º–ø–∞, –≤—ñ–¥–≤–µ–¥–µ–Ω–Ω—è –Ω–æ–≥–∏, —Ä–æ–∑–≥–∏–Ω–∞–Ω–Ω—è –≤ —Å—Ç–µ–≥–Ω—ñ",
            "\nüíä *–ü—Ä–µ–ø–∞—Ä–∞—Ç–∏:*",
            "- –ö—Å–∞—Ä–µ–ª—Ç–æ 10 –º–≥ ‚Äì –¥–æ 28.07.2025",
            "- –í—ñ—Ç–∞–º—ñ–Ω D3+K2, –ú–∞–≥–Ω—ñ–π",
            "\nüìå *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:*",
            "- –ù–æ—Å–∏—Ç–∏ —Ç—É—Ç–æ—Ä –¥–æ 14 –¥–Ω—è",
            "- –ë–µ–∑ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è 1.5 –º—ñ—Å"
        ]
    elif 15 <= day_number <= 30:
        return [
            "*–§–∞–∑–∞ 2: –†–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ (3‚Äì6 —Ç–∏–∂–¥–µ–Ω—å)*\n",
            "üßò‚Äç‚ôÄÔ∏è *–í–ø—Ä–∞–≤–∏:* Heel Slides, –ø—ñ–¥–π–æ–º –Ω–æ–≥–∏, –º—ñ—Å—Ç, –±–∞–ª–∞–Ω—Å, –≥–æ–º—ñ–ª–∫–æ—Å—Ç–æ–ø",
            "üß† *–¶—ñ–ª—å:* —Ä—É—Ö –¥–æ 90¬∞, –º‚Äô—è–∑–æ–≤–∏–π —Ç–æ–Ω—É—Å, –∫–æ–Ω—Ç—Ä–æ–ª—å",
            "\nüíä *–ü—ñ–¥—Ç—Ä–∏–º–∫–∞:*",
            "- –ì–ª—é–∫–æ–∑–∞–º—ñ–Ω, –ö–æ–ª–∞–≥–µ–Ω II, D3, Mg",
            "\n‚ùó *–ó–∞—Å—Ç–µ—Ä–µ–∂–µ–Ω–Ω—è:*",
            "- –ë–µ–∑ –±—ñ–≥—É, —Å–∫—Ä—É—á—É–≤–∞–Ω—å, —Å–∏–¥—ñ–Ω–Ω—è –Ω–∞–≤–ø–æ—á—ñ–ø–∫–∏",
            "- –°—Ç–æ–ø –ø—Ä–∏ –±–æ–ª—é –∞–±–æ –Ω–µ—Å—Ç–∞–±—ñ–ª—å–Ω–æ—Å—Ç—ñ"
        ]
    else:
        return [
            "*üéâ –û—Å–Ω–æ–≤–Ω–∞ —Ñ–∞–∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!*",
            "–ü–æ—Å—Ç—É–ø–æ–≤–æ –∑–±—ñ–ª—å—à—É–π –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—ñ–¥ –Ω–∞–≥–ª—è–¥–æ–º —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∞"
        ]

# === –ö–æ–º–∞–Ω–¥–∏ Telegram ===
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_ids.add(message.chat.id)
    bot.send_message(
        message.chat.id,
        "–ü—Ä–∏–≤—ñ—Ç! ü§ñ\n–Ø –¥–æ–ø–æ–º–æ–∂—É —Ç–æ–±—ñ –∑ —Ä–µ–∞–±—ñ–ª—ñ—Ç–∞—Ü—ñ—î—é –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó.\n"
        "–ù–∞—Ç–∏—Å–Ω–∏ /status, —â–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–ª–∞–Ω –Ω–∞ —Å—å–æ–≥–æ–¥–Ω—ñ.",
        reply_markup=main_menu()
    )

@bot.message_handler(commands=['status'])
def send_status(message):
    today = datetime.now()
    day_number = (today.date() - surgery_date.date()).days + 1
    response = f"üìÖ *–°—å–æ–≥–æ–¥–Ω—ñ {day_number}-–π –¥–µ–Ω—å –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó*\n\n"
    rehab_info = get_rehab_info(day_number)
    response += "\n\n".join(rehab_info)
    bot.send_message(message.chat.id, response, parse_mode="Markdown")

@bot.message_handler(commands=['–ø–∏—Ç–∞–Ω–Ω—è'])
def ask_help(message):
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ —Å–≤–æ—î –∑–∞–ø–∏—Ç–∞–Ω–Ω—è: –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, *¬´—á–∏ –º–æ–∂–Ω–∞ –∑–≥–∏–Ω–∞—Ç–∏ –Ω–æ–≥—É?¬ª*",
                     parse_mode="Markdown")

@bot.message_handler(func=lambda message: True)
def handle_text(message):
    text = message.text.lower()
    day = (datetime.now().date() - surgery_date.date()).days + 1

    if "–∑–≥–∏–Ω–∞—Ç–∏" in text and "–Ω–æ–≥—É" in text:
        if day <= 14:
            bot.reply_to(message, "üîí –ù–∞—Ä–∞–∑—ñ –¥–æ–∑–≤–æ–ª–µ–Ω–æ –∑–≥–∏–Ω–∞—Ç–∏ –¥–æ 30‚Äì40¬∞, –ø–∞—Å–∏–≤–Ω–æ. –ù–µ –±—ñ–ª—å—à–µ –±–µ–∑ –¥–æ–∑–≤–æ–ª—É!")
        else:
            bot.reply_to(message, "‚úÖ –ú–æ–∂–Ω–∞ –æ–±–µ—Ä–µ–∂–Ω–æ –∑–≥–∏–Ω–∞—Ç–∏ –¥–æ 90¬∞, —è–∫—â–æ –Ω–µ–º–∞—î –±–æ–ª—é.")
    elif "–∫—Å–∞—Ä–µ–ª—Ç–æ" in text:
        bot.reply_to(message, "üíä –ö—Å–∞—Ä–µ–ª—Ç–æ —Å–ª—ñ–¥ –ø—Ä–∏–π–º–∞—Ç–∏ 1 —Ç–∞–±/–¥–µ–Ω—å –¥–æ 28.07.2025.")
    elif "–Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è" in text:
        bot.reply_to(message, "üö´ –û—Å—å–æ–≤–µ –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ –ª—ñ–≤—É –Ω–æ–≥—É –∑–∞–±–æ—Ä–æ–Ω–µ–Ω–µ –¥–æ 1.5 –º—ñ—Å—è—Ü—è –ø—ñ—Å–ª—è –æ–ø–µ—Ä–∞—Ü—ñ—ó.")
    elif "–∫–æ–Ω—Ç–∞–∫—Ç" in text:
        bot.reply_to(message, "üìû –ó–≤‚Äô—è–∑–æ–∫ –∑ —Ä–µ–∞–±—ñ–ª—ñ—Ç–æ–ª–æ–≥–æ–º: +380672727910")
    else:
        bot.reply_to(message, "‚ùì –ù–µ –≤–ø–µ–≤–Ω–µ–Ω–∏–π —É –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ. –ù–∞–¥—ñ—à–ª–∏ /status –∞–±–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –ø–∏—Ç–∞–Ω–Ω—è.")

# === –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è (–Ω–µ –ø—Ä–∞—Ü—é—î —É Flask –±–µ–∑ –æ–∫—Ä–µ–º–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É Render Worker) ===
def send_daily_reminders():
    for user_id in user_ids:
        bot.send_message(user_id, "üïò *–ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:* –Ω–µ –∑–∞–±—É–¥—å –≤–∏–∫–æ–Ω–∞—Ç–∏ –≤–ø—Ä–∞–≤–∏ –õ–§–ö —Å—å–æ–≥–æ–¥–Ω—ñ! –ù–∞–¥—ñ—à–ª–∏ /status ü¶µ", parse_mode="Markdown")

# === Flask routes ===
@app.route('/')
def home():
    return "‚úÖ Telegram Rehab Bot –ø—Ä–∞—Ü—é—î!"

@app.route(f"/{TOKEN}", methods=["POST"])
def receive_update():
    json_string = request.get_data().decode("utf-8")
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200

# === –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ ===
if os.getenv("RENDER_EXTERNAL_URL"):
    # –Ø–∫—â–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä—ñ Render ‚Äî –∑–∞–ø—É—Å–∫–∞—î–º–æ –≤–µ–±—Ö—É–∫
    app_url = os.getenv("RENDER_EXTERNAL_URL")
    bot.remove_webhook()
    bot.set_webhook(url=f"{app_url}/{TOKEN}")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
else:
    # –Ø–∫—â–æ –ª–æ–∫–∞–ª—å–Ω–æ ‚Äî –∑–∞–ø—É—Å–∫–∞—î–º–æ polling
    print("üîÅ –õ–æ–∫–∞–ª—å–Ω–∏–π –∑–∞–ø—É—Å–∫: —Ä–µ–∂–∏–º polling")
    bot.remove_webhook()
    bot.infinity_polling()


